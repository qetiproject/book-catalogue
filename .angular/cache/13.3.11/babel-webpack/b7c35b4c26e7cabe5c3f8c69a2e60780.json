{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let EventBusService = /*#__PURE__*/(() => {\n  class EventBusService {\n    constructor() {\n      this.eventBus$ = new Subject();\n    }\n\n    emit(key, data) {\n      this.eventBus$.next({\n        key,\n        data\n      });\n    }\n\n    on(key) {\n      return this.eventBus$.asObservable().pipe(filter(event => event.key === key), map(event => event.data));\n    }\n\n  }\n\n  EventBusService.ɵfac = function EventBusService_Factory(t) {\n    return new (t || EventBusService)();\n  };\n\n  EventBusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventBusService,\n    factory: EventBusService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventBusService;\n})();","map":null,"metadata":{},"sourceType":"module"}